version: '3.8'

services:
  # Infrastructure
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  # Microservices
  websocket-service:
    build: ./websocket-service
    ports:
      - "5001:5000"
    environment:
      REDIS_URL: redis://redis:6379
      KAFKA_URL: kafka:9092
    depends_on:
      - redis
      - kafka

  messaging-service:
    build: ./messaging-service
    ports:
      - "5002:5000"
    environment:
      REDIS_URL: redis://redis:6379
      KAFKA_URL: kafka:9092
    depends_on:
      - redis
      - kafka

  group-service:
    build: ./group-service
    ports:
      - "5003:5000"
    environment:
      DATABASE_URL: postgresql://chat:password@postgres:5432/chatapp
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  session-service:
    build: ./session-service
    ports:
      - "5004:5000"
    environment:
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis

  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    environment:
      WEBSOCKET_SERVICE_URL: http://websocket-service:5000
      MESSAGING_SERVICE_URL: http://messaging-service:5000
      GROUP_SERVICE_URL: http://group-service:5000
      SESSION_SERVICE_URL: http://session-service:5000
    depends_on:
      - websocket-service
      - messaging-service
      - group-service
      - session-service
